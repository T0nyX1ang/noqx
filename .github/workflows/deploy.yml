# Simple workflow for deploying static content to GitHub Pages
name: Deploy Pages

on:
  # Runs on pushes targeting the default branch
  push:
    branches: [$default-branch]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
# However, do NOT cancel in-progress runs as we want to allow these production deployments to complete.
concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  # Single deploy job since we're just deploying
  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Pages
        uses: actions/configure-pages@v5

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.12"

      - name: Install uv and enable caching
        uses: astral-sh/setup-uv@v3
        with:
          enable-cache: true

      - name: Install the project
        run: uv sync --all-extras --dev

      - name: Build deploy content with code simplification
        run: |
          uv run main.py -D
          uv run pyminify ./dist/page --in-place --remove-class-attribute-annotations --remove-literal-statements
          uv run ruff check --select F401 --fix --preview --unsafe-fixes ./dist/page

      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: "./dist/page"

      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
